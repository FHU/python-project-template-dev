

name: FHU Standard Python Project Tests

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest coverage flake8 pytest-mypy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Check syntax with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Test with pytest and coverage
        run: |
          # run tests with pytest and mypy through coverage to get test coverage
          # metrics and test type annotations
          coverage run -m pytest --mypy
      - name: Generate coverage reports for SonarCloud and documentation
        run: |
          coverage xml
          coverage html --show-contexts -d ./docs/htmlcov/
      - name: Upload html coverage report for Documentation
        uses: actions/upload-artifact@v3
        with:
          name: coverage_html
          path: docs/htmlcov
      - name: Upload xml coverage report for SonarCloud
        uses: actions/upload-artifact@v3
        with:
          name: coverage_xml
          path: coverage.xml

  sonarcloud:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting for SonarCloud
          fetch-depth: '0'
      - name: Download xml coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage_xml
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=fhu
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}
            -Dsonar.python.version=3.10,3.11
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.coverage.exclusions=docs/*,tests/*,conftest.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  independant_checks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 pep8-naming interrogate darglint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Check naming with flake8
        run: |
          # check to see if names match pep8 with flake8
          flake8 . --count --select=N801,N802,N803,N804,N805,N806,N807,N811,N812,N813,N814,N815,N816,N817,N818 --show-source --statistics
      - name: Check for docstring conformance to Google standard with flake8
        if: success() || failure()
        run: |
          # check to see if docstrings are google standards compliant
          flake8 . --count --select=DAR101,DAR201 --show-source --statistics
      - name: Lint with Black
        if: success() || failure()
        run: |
          # check to see if black was run with the length option of 127 before committing
          black --check .
      - name: Python Documentation Coverage Check (interrogate)
        if: success() || failure()
        run: |
          interrogate .


  build_docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write

    # Allow one concurrent deployment
    concurrency:
      group: "pages"
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx_rtd_theme interrogate
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Download html report artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage_html
          path: docs/_static/htmlcov
      - name: Generate report and badge for documentation coverage
        continue-on-error: true
        run: |
          interrogate . -vv -o docs/_static/doc_coverage.txt -g docs/_static/doc_coverage_badge.svg
      - name: Generate autodoc files with napoleon
        run: |
          # Make .rst files from Google docstrings
          sphinx-apidoc -f -o docs/ .
      - name: Generate documentation
        run: |
          # Make the html files to publish
          sphinx-build docs docs/_build
        env:
          SONARCLOUD_PROJECT: https://sonarcloud.io/project/overview?id=${{ github.repository_owner }}_${{ github.event.repository.name }}
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload docs directory
          path: './docs/_build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
